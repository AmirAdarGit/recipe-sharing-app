name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Add permissions for the workflow
permissions:
  contents: read
  deployments: write
  statuses: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          cd client && npm ci
          cd ../server && npm ci
          
      - name: Lint and test
        run: |
          cd client && npm run lint || echo "No lint script"
          cd ../server && npm run lint || echo "No lint script"

  deploy-frontend:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install and Build
        run: |
          cd client
          npm ci
          npm run build
        env:
          VITE_API_URL: https://recipe-sharing-app-production.up.railway.app
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './client/dist'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: false
          enable-commit-status: false
          enable-github-deployment: false
          overwrites-pull-request-comment: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  deploy-backend:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Railway CLI
        run: npm install -g @railway/cli@latest

      - name: Verify Railway secrets
        run: |
          echo "Checking if Railway secrets are set..."
          if [ -z "$RAILWAY_TOKEN" ]; then
            echo "❌ RAILWAY_TOKEN is not set"
            exit 1
          fi
          if [ -z "$RAILWAY_PROJECT_ID" ]; then
            echo "❌ RAILWAY_PROJECT_ID is not set"
            exit 1
          fi
          if [ -z "$RAILWAY_ENVIRONMENT_ID" ]; then
            echo "❌ RAILWAY_ENVIRONMENT_ID is not set"
            exit 1
          fi
          echo "✅ All Railway secrets are configured"
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
          RAILWAY_ENVIRONMENT_ID: ${{ secrets.RAILWAY_ENVIRONMENT_ID }}

      - name: Deploy to Railway
        run: |
          echo " Starting Railway deployment..."
          echo "Setting up production environment variables..."

          # Set MongoDB environment variable for production
          railway variables set MONGODB_URI="${{ secrets.MONGODB_URI }}" || echo "Failed to set MONGODB_URI"
          railway variables set NODE_ENV="production" || echo "Failed to set NODE_ENV"
          railway variables set CORS_ORIGIN="${{ secrets.CORS_ORIGIN }}" || echo "Failed to set CORS_ORIGIN"

          # Set Firebase environment variables for production
          railway variables set FIREBASE_PROJECT_ID="${{ secrets.FIREBASE_PROJECT_ID }}" || echo "Failed to set FIREBASE_PROJECT_ID"
          railway variables set FIREBASE_PRIVATE_KEY_ID="${{ secrets.FIREBASE_PRIVATE_KEY_ID }}" || echo "Failed to set FIREBASE_PRIVATE_KEY_ID"
          railway variables set FIREBASE_PRIVATE_KEY="${{ secrets.FIREBASE_PRIVATE_KEY }}" || echo "Failed to set FIREBASE_PRIVATE_KEY"
          railway variables set FIREBASE_CLIENT_EMAIL="${{ secrets.FIREBASE_CLIENT_EMAIL }}" || echo "Failed to set FIREBASE_CLIENT_EMAIL"
          railway variables set FIREBASE_CLIENT_ID="${{ secrets.FIREBASE_CLIENT_ID }}" || echo "Failed to set FIREBASE_CLIENT_ID"

          echo ""
          echo "Attempting deployment..."
          railway deploy --detach || railway up --detach || echo "Both deploy commands failed, trying basic deploy..."
          railway deploy || railway up || echo "All deployment methods failed"
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
          RAILWAY_ENVIRONMENT_ID: ${{ secrets.RAILWAY_ENVIRONMENT_ID }}
        working-directory: ./server
