name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          cd client && npm ci
          cd ../server && npm ci
          
      - name: Lint and test
        run: |
          cd client && npm run lint || echo "No lint script"
          cd ../server && npm run lint || echo "No lint script"

  deploy-frontend:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install and Build
        run: |
          cd client
          npm ci
          npm run build
          
      - name: Deploy to Vercel
        run: |
          cd client
          echo "$VERCEL_PROJECT_JSON" > .vercel/project.json
          npx vercel --prod
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.PROJECT_ID }}
          VERCEL_PROJECT_JSON: '{"projectId":"${{ secrets.PROJECT_ID }}","orgId":"${{ secrets.ORG_ID }}"}'

  deploy-backend:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Deploy to Railway
        uses: bervProject/railway-deploy@v1.2.0
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN }}
          service: ${{ secrets.RAILWAY_SERVICE_ID }}
